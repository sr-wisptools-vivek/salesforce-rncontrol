public class RNControlAPI {

	private String token;
	private String tokenExpires;
	private Boolean authenticated;
	private Map<String, Object> lastError;

	public RNControlAPI(ApexPages.StandardSetController stdSetController) {
		this.authenticated = false;
		this.token = '';
		this.tokenExpires = '';
		this.lastError = new Map<String, Object>();

		User salesforce_user = [Select rncontrol_username__c, rncontrol_password__c From User Where Id = :UserInfo.getUserId() Limit 1];
		String username = (String) salesforce_user.rncontrol_username__c;
		String password = (String) salesforce_user.rncontrol_password__c;
		if (username.length()>0 && password.length()>0) {
			this.authenticated = this.authenticate(username, password);
		}
	}

	private Boolean authenticate(String username, String password) {
		Http http = new Http();
		HttpRequest request = new HttpRequest();
		request.setEndpoint('https://api.rncontrol.com/users/login');
		request.setMethod('POST');
		request.setHeader('Content-Type', 'application/json;charset=UTF-8');
		request.setBody('{"username":"' + username + '", "password": "' + password + '"}');
		HttpResponse response = http.send(request);
		if (response.getStatusCode() == 200) {
			Map<String, Object> results = (Map<String, Object>) JSON.deserializeUntyped(response.getBody());
			this.token = (String) results.get('token');
			this.tokenExpires = (String) results.get('tokenExpires');
			return true;
		}
		return false;
	}

	private Boolean isAuthenticated() {
		//TODO: Check tokenExpires
		return this.authenticated;
	}

	private Boolean fetchRouters() {
		if (this.isAuthenticated()) {
			Http http = new Http();
			HttpRequest request = new HttpRequest();
			request.setEndpoint('https://api.rncontrol.com/mr/search');
			request.setMethod('POST');
			request.setHeader('Content-Type', 'application/json;charset=UTF-8');
			request.setHeader('Authorization', 'Bearer ' + token);
			request.setBody('{"limit":"100", "type": "router"}');
			HttpResponse response = http.send(request);
			if (response.getStatusCode() == 200) {
				List<Object> rncontrol_routers = (List<Object>) JSON.deserializeUntyped(response.getBody());
				List<Managed_Router__c> managedRouterList = new List<Managed_Router__c>();
				for (Object rncontrol_router : rncontrol_routers) {
					Map<String, Object> rnr = (Map<String, Object>) rncontrol_router;
					Managed_Router__c managedRouter = new Managed_Router__c();
					managedRouter.RNControlID__c = (Integer) rnr.get('id');
					managedRouter.Domain__c = (String) rnr.get('domain');
					managedRouter.Mac__c = (String) rnr.get('mac');
					managedRouter.Make__c = (String) rnr.get('make');
					managedRouter.Model__c = (String) rnr.get('model');
					managedRouter.Name = (String) rnr.get('name');
					managedRouter.Serial__c = (String) rnr.get('serial');
					managedRouter.Url__c = (String) rnr.get('url');
					managedRouterList.add(managedRouter);
				}
				upsert managedRouterList Managed_Router__c.Fields.RNControlID__c;
				return true;
			}
		}
		return false;
	}

	public PageReference syncRouters() {
		this.fetchRouters();
		PageReference pageRef = new PageReference(ApexPages.currentPage().getUrl());
		pageRef.setRedirect(true);
		return pageRef;
	}

	private Boolean createRouter(String name, String serial, String mac) {
		if (this.isAuthenticated()) {
			Http http = new Http();
			HttpRequest request = new HttpRequest();
			request.setEndpoint('https://api.rncontrol.com/mr/add');
			request.setMethod('POST');
			request.setHeader('Content-Type', 'application/json;charset=UTF-8');
			request.setHeader('Authorization', 'Bearer ' + token);
			request.setBody('{"name": "' + name + '", "serial": "' + serial + '", "mac": "' + mac + '"}');
			HttpResponse response = http.send(request);
			if (response.getStatusCode() == 200) {
				List<Object> rncontrol_routers = (List<Object>) JSON.deserializeUntyped(response.getBody());
				for (Object rncontrol_router : rncontrol_routers) {
					Map<String, Object> rnr = (Map<String, Object>) rncontrol_router;
					Managed_Router__c managedRouter = new Managed_Router__c();
					managedRouter.RNControlID__c = (Integer) rnr.get('id');
					managedRouter.Domain__c = (String) rnr.get('domain');
					managedRouter.Mac__c = (String) rnr.get('mac');
					managedRouter.Make__c = (String) rnr.get('make');
					managedRouter.Model__c = (String) rnr.get('model');
					managedRouter.Name = (String) rnr.get('name');
					managedRouter.Serial__c = (String) rnr.get('serial');
					managedRouter.Url__c = (String) rnr.get('url');
					insert managedRouter;
				}
				return true;
			} else {
				Map<String, Object> error_msg = (Map<String, Object>) JSON.deserializeUntyped(response.getBody());
				this.lastError = error_msg;
				return false;
			}
		}
		return false;
	}

	public Boolean addRouter(String name, String serial, String mac) {
		return this.createRouter(name, serial, mac);
	}

	public Map<String, Object> getLastError() {
		return this.lastError;
	}

}
